import Head from 'next/head'
import Script from 'next/script';
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState, useRef } from 'react'
import Map, {Marker, GeolocateControl, NavigationControl}  from 'react-map-gl';
import 'mapbox-gl/dist/mapbox-gl.css';

const inter = Inter({ subsets: ['latin'] })

const MAPBOX_TOKEN = 'pk.eyJ1IjoiY2lwaGVyMDEiLCJhIjoiY2xnMzVvZXA1MGNmMDNzcHRjNmxnMHBqZyJ9.7_AMShwyXb_lsQI26LOUZw'

export default function Home() {
  const [viewport, setViewport] = useState({
    latitude: 0,
    longitude: 0
  });  
  const map = useRef(null);

  useEffect(() => {
    const directions = new MapboxDirections({
      accessToken: 'pk.eyJ1IjoiY2lwaGVyMDEiLCJhIjoiY2xnMzVvZXA1MGNmMDNzcHRjNmxnMHBqZyJ9.7_AMShwyXb_lsQI26LOUZw',
      unit: 'metric',
      profile: 'mapbox/driving-traffic',
      controls: { instructions: true }
    });

    map?.current?.addControl(directions, 'top-left');
  }, [map?.current]);

  return (
    <div>
      <Head>
        <title>Tracking System</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Script src="https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js" strategy="beforeInteractive" />
      <Script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js" strategy="beforeInteractive" />

      <div className={styles.main}>
        <Map
          ref={map}
          onLoad={(e) => 
            map.current = e?.target
          }
          initialViewState={{
            latitude: viewport?.latitude,
            longitude: viewport?.longitude,
            zoom: 4
          }}
          style={{width: "100%", height: "100%"}}
          mapStyle="mapbox://styles/mapbox/streets-v11"
          mapboxAccessToken={MAPBOX_TOKEN}
        >
          <Marker 
            longitude={viewport?.longitude} 
            latitude={viewport?.latitude} 
            color="red" 
            draggable
            onDragEnd={(e) =>
              setViewport(prevState => ({        
                ...prevState.viewport,    
                latitude: e.lngLat.lat,
                longitude: e.lngLat.lng     
              }))
            }
          />
          <NavigationControl position="bottom-right" />
          <GeolocateControl
            position="top-left"
            trackUserLocation={true}
            showUserHeading={true}
            onGeolocate={(e) =>
              setViewport(prevState => ({        
                ...prevState.viewport,    
                latitude: e.coords.latitude,
                longitude: e.coords.longitude     
              }))
            }
          />
        </Map>
      </div>

    </div>
  )
}
